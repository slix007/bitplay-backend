plugins {
    id 'org.hidetake.ssh' version '2.10.1'
}

ssh.settings {
    knownHosts = allowAnyHosts
}

remotes {
    host658 {
        host = bpHost658
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host5068 {
        host = bpHost5068
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host5040 {
        host = bpHost5040
        user = bpUser5040
        password = bpPassword5040
        port = bpPort as Integer
    }
    host5061 {
        host = bpHost5061
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host5060 {
        host = bpHost5060
        user = bpUser5060
        password = bpPassword5060
        port = bpPort as Integer
    }
    host5064 {
        host = bpHost5064
        user = bpUser5064
        password = bpPassword5064
        port = bpPort as Integer
    }
    host659 {
        host = bpHost659
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host660 {
        host = bpHost660
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host662 {
        host = bpHost662
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host667 {
        host = bpHost667
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host668 {
        host = bpHost668
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host669 {
        host = bpHost669
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    host661 {
        host = bpHost661
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    test {
        host = bpHost
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    prod {
        host = bpProdHost
        user = bpUser
        password = bpPassword
        port = bpPort as Integer
    }
    demo {
        host = bpDemoHost
        user = bpUser
        password = bpDemoPassword
        port = bpDemoPort as Integer
    }
    host5051 {
        host = bpHost5051
        user = bpUser5051
        password = bpPassword5051
        port = bpPort as Integer
    }
}

def remoteInstallDir = '/opt/bitplay/bitmex-okcoin'
def remoteHomeDir = '/home/' + bpUser

task cleanLogs {
    doLast {
        println "delete $project.projectDir/logs"
        delete "$project.projectDir/logs"
    }
}

// Test servers
task deployHost658 { doLast { sshRun(remotes.host658, remoteHomeDir, remoteInstallDir) } }
task deployHost5068 { doLast { sshRun(remotes.host5068, remoteHomeDir, remoteInstallDir) } }
task deployHost5040 { doLast { sshRun(remotes.host5040, '/home/ss', remoteInstallDir) } }
task deployHost5061 { doLast { sshRun(remotes.host5061, remoteHomeDir, remoteInstallDir) } }
task deployHost660 { doLast { sshRun(remotes.host660, remoteHomeDir, remoteInstallDir) } }

// Prod servers
task deployHost659 { doLast { sshRun(remotes.host659, remoteHomeDir, remoteInstallDir) } }
task deployHost662 { doLast { sshRun(remotes.host662, remoteHomeDir, remoteInstallDir) } }
task deployHost667 { doLast { sshRun(remotes.host667, remoteHomeDir, remoteInstallDir) } }
task deployHost668 { doLast { sshRun(remotes.host668, remoteHomeDir, remoteInstallDir) } }
task deployHost669 { doLast { sshRun(remotes.host669, remoteHomeDir, remoteInstallDir) } }
task deployHost661 { doLast { sshRun(remotes.host661, remoteHomeDir, remoteInstallDir) } }
task deployTest { doLast { sshRun(remotes.test, remoteHomeDir, remoteInstallDir) } }
task deployProd { doLast { sshRun(remotes.prod, remoteHomeDir, remoteInstallDir) } }
task deployDemo { doLast { sshRun(remotes.demo, remoteHomeDir, remoteInstallDir) } }

// Real server
task deployHost5051 { doLast { sshRun(remotes.host5051, '/home/ss', remoteInstallDir) } }
task deployHost5060 { doLast { sshRun(remotes.host5060, '/home/ss', remoteInstallDir) } }
task deployHost5064 { doLast { sshRun(remotes.host5064, '/home/ss', remoteInstallDir) } }

private void sshRun(hostName, remoteHomeDir, remoteInstallDir) {
    println "===$hostName.host:$hostName.port::$hostName.user::$hostName.password==="
    ssh.run {
        session(hostName) {

            put from: "$project.projectDir/core/target/bitplay-0.0.1-SNAPSHOT.jar", into: "${remoteHomeDir}/"

            executeSudo "sudo systemctl stop bitplay2", pty: true
            executeSudo "sudo rm -f ${remoteInstallDir}/bitplay.jar", pty: true
            executeSudo "sudo cp ${remoteHomeDir}/bitplay-0.0.1-SNAPSHOT.jar ${remoteInstallDir}/bitplay.jar", pty: true
            executeSudo "sudo chown root:root ${remoteInstallDir}/bitplay.jar", pty: true
            executeSudo "sudo chmod 600 ${remoteInstallDir}/bitplay.jar", pty: true
            executeSudo "sudo systemctl start bitplay2", pty: true
            executeSudo "sudo systemctl start bitplay2", pty: true
        }
    }
}
